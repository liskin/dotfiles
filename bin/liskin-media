#!/usr/bin/env bash

set -eu -o pipefail
shopt -s lastpipe

export LC_ALL=C

function action-volume {
	local sign
	[[ ${1-} != @(up|down) ]] && { echo 'up|down expected'; exit 1; }
	[[ $1 == up ]] && sign="+" || sign="-"
	pactl set-sink-volume @DEFAULT_SINK@ "$sign"5%
}

function action-mute     { pactl set-sink-mute   @DEFAULT_SINK@   toggle; }
function action-mic-mute { pactl set-source-mute @DEFAULT_SOURCE@ toggle; }

function status-camera {
	local camera

	camera=$(usbguard list-devices --blocked | awk -F: '/ name "Integrated (RGB )?Camera" / { print $1 }')
	if [[ $camera ]]; then
		echo "$camera" 0; exit
	fi

	camera=$(usbguard list-devices --allowed | awk -F: '/ name "Integrated (RGB )?Camera" / { print $1 }')
	if [[ $camera ]]; then
		echo "$camera" 1; exit
	fi
}

function set-camera {
	local usb_dev camera
	usb_dev="${1:?}" && camera="${2:?}"

	if (( camera )); then
		usbguard allow-device "$usb_dev"
		dunstify -i camera-web -u low -t 2000 "Integrated Camera allowed"
	else
		usbguard block-device "$usb_dev"
		dunstify -i camera-web -u low -t 2000 "Integrated Camera blocked"
	fi
}

function action-toggle-camera {
	local usb_dev camera
	status-camera | read -r usb_dev camera
	set-camera "$usb_dev" $((!camera))
}

# Listen for MPRIS events and remember which player we interacted with last
function action-mpris-daemon {
	playerctl --all-players --follow --format '{{playerName}} {{status}}' status 2>&1 \
	| while read -r player status; do
		if [[ $status == @(Paused|Playing) ]]; then
			printf "%s\n" "$player" >"${XDG_RUNTIME_DIR}/liskin-media-last"
		fi
	done
}

function get-mpris-playing {
	playerctl --all-players --format '{{playerName}} {{status}}' status \
	| while read -r player status; do
		if [[ $status == Playing ]]; then
			printf "%s\n" "$player"
			return
		fi
	done

	return 1
}

function get-mpris-one-playing-or-paused {
	local -a players=()

	playerctl --all-players --format '{{playerName}} {{status}}' status \
	| while read -r player status; do
		if [[ $status == @(Paused|Playing) ]]; then
			players+=("$player")
		fi
	done

	if (( "$(( ${players[@]+${#players[@]}} ))" == 1 )); then
		echo "${players[0]}"
	else
		return 1
	fi
}

function get-mpris-last {
	if [[ -f "${XDG_RUNTIME_DIR}/liskin-media-last" ]]; then
		echo "$(< "${XDG_RUNTIME_DIR}/liskin-media-last")"
	else
		return 1
	fi
}

function get-mpris-smart {
	get-mpris-playing || get-mpris-one-playing-or-paused || get-mpris-last
}

function action-play { p=$(get-mpris-smart); playerctl -p "$p" play-pause; }
function action-stop { playerctl -a stop; }
function action-next { p=$(get-mpris-playing); playerctl -p "$p" next; }
function action-prev { p=$(get-mpris-playing); playerctl -p "$p" previous; }

if [[ $(type -t "action-${1-}") == function ]]; then
	"action-$1" "${@:2}"
else
	echo "unexpected action: ${1-}"
fi
